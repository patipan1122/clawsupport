const express = require('express');
const crypto = require('crypto');
const app = express();

// Configuration
const config = {
  channelAccessToken: process.env.LINE_CHANNEL_ACCESS_TOKEN,
  channelSecret: process.env.LINE_CHANNEL_SECRET,
  googleAppsScriptURL: process.env.GOOGLE_APPS_SCRIPT_URL
};

// Middleware
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

// Store user sessions in memory
const userSessions = new Map();

// Problem types and solutions
const problemTypes = {
  '1': {
    name: '‡∏ï‡∏π‡πâ‡∏Å‡∏¥‡∏ô‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡πÅ‡∏•‡πâ‡∏ß‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô',
    solutions: [
      '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° "Reset" ‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏≤‡∏ô‡∏Ç‡πâ‡∏≤‡∏á‡∏ï‡∏π‡πâ‡∏Ñ‡πâ‡∏≤‡∏á‡πÑ‡∏ß‡πâ 5 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ',
      '‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏ß‡πà‡∏≤‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏õ‡∏Å‡∏ï‡∏¥‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà',
      '‡∏•‡∏≠‡∏á‡πÉ‡∏™‡πà‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏î‡∏™‡∏≠‡∏ö',
      '‡∏´‡∏≤‡∏Å‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô'
    ]
  },
  '2': {
    name: '‡∏ï‡∏π‡πâ‡∏Ñ‡πâ‡∏≤‡∏á‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á',
    solutions: [
      '‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° "Reset" ‡∏ó‡∏µ‡πà‡∏î‡πâ‡∏≤‡∏ô‡∏Ç‡πâ‡∏≤‡∏á‡∏ï‡∏π‡πâ‡∏Ñ‡πâ‡∏≤‡∏á‡πÑ‡∏ß‡πâ 10 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ',
      '‡∏£‡∏≠‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì 30 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ ‡πÉ‡∏´‡πâ‡∏ï‡∏π‡πâ‡∏£‡∏µ‡∏™‡∏ï‡∏≤‡∏£‡πå‡∏ó‡πÄ‡∏≠‡∏á',
      '‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏Å‡∏•‡∏±‡∏ö‡∏°‡∏≤‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏õ‡∏Å‡∏ï‡∏¥',
      '‡∏•‡∏≠‡∏á‡πÉ‡∏™‡πà‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á'
    ]
  },
  '3': {
    name: '‡∏ï‡∏π‡πâ‡∏Ñ‡∏µ‡∏ö‡πÑ‡∏°‡πà‡πÅ‡∏Ç‡πá‡∏á',
    solutions: [
      '‡∏•‡∏≠‡∏á‡πÄ‡∏•‡πà‡∏ô‡∏≠‡∏µ‡∏Å 1-2 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏î‡∏™‡∏≠‡∏ö',
      '‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ï‡∏π‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° "‡πÅ‡∏£‡∏á‡∏Ñ‡∏µ‡∏ö‡∏õ‡∏Å‡∏ï‡∏¥" ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà',
      '‡∏´‡∏≤‡∏Å‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÅ‡∏Ç‡πá‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô',
      '‡∏à‡∏∞‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏£‡∏á‡∏Ñ‡∏µ‡∏ö‡πÉ‡∏´‡πâ'
    ]
  },
  '4': {
    name: '‡∏ï‡∏π‡πâ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏™‡∏µ‡∏¢‡∏á',
    solutions: [
      '‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏ó‡∏µ‡πà‡∏ï‡∏π‡πâ‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà',
      '‡∏•‡∏≠‡∏á‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° Volume + ‡∏ó‡∏µ‡πà‡∏ï‡∏π‡πâ',
      '‡∏£‡∏µ‡∏™‡∏ï‡∏≤‡∏£‡πå‡∏ó‡∏ï‡∏π‡πâ‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏° Reset',
      '‡∏´‡∏≤‡∏Å‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏™‡∏µ‡∏¢‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÅ‡∏à‡πâ‡∏á‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô'
    ]
  },
  '5': {
    name: '‡∏´‡∏¢‡∏≠‡∏î‡∏Ñ‡∏£‡∏ö‡πÅ‡∏•‡πâ‡∏ß ‡∏ï‡∏∏‡πä‡∏Å‡∏ï‡∏≤‡πÑ‡∏°‡πà‡∏≠‡∏≠‡∏Å',
    solutions: [
      '‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Ñ‡∏µ‡∏ö‡∏à‡∏±‡∏ö‡∏ï‡∏∏‡πä‡∏Å‡∏ï‡∏≤‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á',
      '‡∏•‡∏≠‡∏á‡πÄ‡∏Ç‡∏¢‡πà‡∏≤‡∏ï‡∏π‡πâ‡πÄ‡∏ö‡∏≤‡πÜ ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ï‡∏∏‡πä‡∏Å‡∏ï‡∏≤‡∏ï‡∏Å',
      '‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ï‡∏∏‡πä‡∏Å‡∏ï‡∏≤‡∏ï‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà',
      '‡∏´‡∏≤‡∏Å‡∏ï‡∏∏‡πä‡∏Å‡∏ï‡∏≤‡πÑ‡∏°‡πà‡∏≠‡∏≠‡∏Å‡∏à‡∏£‡∏¥‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÅ‡∏à‡πâ‡∏á‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô'
    ]
  }
};

// Save data to Google Sheets via Apps Script
async function saveToGoogleSheets(data) {
  if (!config.googleAppsScriptURL) {
    console.log('Google Apps Script URL not configured');
    return false;
  }

  try {
    console.log('Saving data to Google Sheets:', data);
    
    const response = await fetch(config.googleAppsScriptURL, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(data)
    });

    if (response.ok) {
      const result = await response.json();
      console.log('‚úÖ Data saved to Google Sheets successfully:', result);
      return true;
    } else {
      console.error('‚ùå Failed to save to Google Sheets:', response.status);
      return false;
    }
  } catch (error) {
    console.error('‚ùå Error saving to Google Sheets:', error);
    return false;
  }
}

// Verify LINE signature
function verifySignature(body, signature) {
  if (!signature || !config.channelSecret) {
    return false;
  }
  
  const hash = crypto
    .createHmac('sha256', config.channelSecret)
    .update(body, 'utf8')
    .digest('base64');
  
  return hash === signature;
}

// Send reply to LINE
async function replyMessage(replyToken, message) {
  if (!config.channelAccessToken) {
    console.log('LINE Channel Access Token not found');
    return;
  }

  try {
    const response = await fetch('https://api.line.me/v2/bot/message/reply', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${config.channelAccessToken}`
      },
      body: JSON.stringify({
        replyToken: replyToken,
        messages: [message]
      })
    });

    if (!response.ok) {
      console.error('Failed to send LINE message:', response.status);
    }
  } catch (error) {
    console.error('Error sending LINE message:', error);
  }
}

// Health check endpoint
app.get('/', (req, res) => {
  res.send('ü§ñ Claw Machine Support Bot is running!');
});

// Webhook endpoint
app.post('/webhook', (req, res) => {
  const signature = req.headers['x-line-signature'];
  const body = JSON.stringify(req.body);

  // Verify signature
  if (!verifySignature(body, signature)) {
    console.log('Invalid signature');
    return res.status(400).send('Invalid signature');
  }

  // Process events
  const events = req.body.events || [];
  
  events.forEach(event => {
    if (event.type === 'message' && event.message.type === 'text') {
      handleTextMessage(event);
    }
  });

  res.status(200).send('OK');
});

// Handle text message
async function handleTextMessage(event) {
  const userId = event.source.userId;
  const userMessage = event.message.text.trim();
  const replyToken = event.replyToken;

  // Get or create user session
  if (!userSessions.has(userId)) {
    userSessions.set(userId, { step: 'start', data: {} });
  }

  const session = userSessions.get(userId);
  const replyMessage_obj = await processUserMessage(userId, userMessage, session);

  await replyMessage(replyToken, replyMessage_obj);
}

// Process user message
async function processUserMessage(userId, message, session) {
  switch (session.step) {
    case 'start':
      return handleStart(userId, message, session);
    
    case 'select_problem':
      return handleProblemSelection(userId, message, session);
    
    case 'troubleshooting':
      return handleTroubleshooting(userId, message, session);
    
    case 'get_machine_number':
      return handleMachineNumber(userId, message, session);
    
    case 'get_location':
      return handleLocation(userId, message, session);
    
    case 'get_customer_info':
      return handleCustomerInfo(userId, message, session);
    
    case 'get_evidence':
      return handleEvidence(userId, message, session);
    
    case 'get_account':
      return handleAccount(userId, message, session);
    
    default:
      return { type: 'text', text: '‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢ ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà' };
  }
}

// Handle start conversation
function handleStart(userId, message, session) {
  session.step = 'select_problem';
  
  return {
    type: 'text',
    text: 'üéØ ‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ‡∏Ñ‡∏£‡∏±‡∏ö! ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏Å‡πâ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ï‡∏π‡πâ‡∏Ñ‡∏µ‡∏ö‡∏ï‡∏∏‡πä‡∏Å‡∏ï‡∏≤\n\n‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏û‡∏ö:\n\n1Ô∏è‚É£ ‡∏ï‡∏π‡πâ‡∏Å‡∏¥‡∏ô‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô\n2Ô∏è‚É£ ‡∏ï‡∏π‡πâ‡∏Ñ‡πâ‡∏≤‡∏á‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á\n3Ô∏è‚É£ ‡∏ï‡∏π‡πâ‡∏Ñ‡∏µ‡∏ö‡πÑ‡∏°‡πà‡πÅ‡∏Ç‡πá‡∏á\n4Ô∏è‚É£ ‡∏ï‡∏π‡πâ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏™‡∏µ‡∏¢‡∏á\n5Ô∏è‚É£ ‡∏ï‡∏∏‡πä‡∏Å‡∏ï‡∏≤‡πÑ‡∏°‡πà‡∏≠‡∏≠‡∏Å\n\n‡∏û‡∏¥‡∏°‡∏û‡πå‡πÄ‡∏•‡∏Ç 1-5 ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å'
  };
}

// Handle problem selection
function handleProblemSelection(userId, message, session) {
  const problemKey = message.trim();
  
  if (!problemTypes[problemKey]) {
    return {
      type: 'text',
      text: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á\n‡∏û‡∏¥‡∏°‡∏û‡πå‡πÄ‡∏•‡∏Ç 1-5:\n\n1Ô∏è‚É£ ‡∏ï‡∏π‡πâ‡∏Å‡∏¥‡∏ô‡πÄ‡∏´‡∏£‡∏µ‡∏¢‡∏ç‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô\n2Ô∏è‚É£ ‡∏ï‡∏π‡πâ‡∏Ñ‡πâ‡∏≤‡∏á‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á\n3Ô∏è‚É£ ‡∏ï‡∏π‡πâ‡∏Ñ‡∏µ‡∏ö‡πÑ‡∏°‡πà‡πÅ‡∏Ç‡πá‡∏á\n4Ô∏è‚É£ ‡∏ï‡∏π‡πâ‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏™‡∏µ‡∏¢‡∏á\n5Ô∏è‚É£ ‡∏ï‡∏∏‡πä‡∏Å‡∏ï‡∏≤‡πÑ‡∏°‡πà‡∏≠‡∏≠‡∏Å'
    };
  }

  session.data.problemType = problemKey;
  session.data.problemName = problemTypes[problemKey].name;
  session.data.solutions = problemTypes[problemKey].solutions;
  session.data.currentStep = 0;
  session.step = 'troubleshooting';

  return {
    type: 'text',
    text: `üîß ‡∏õ‡∏±‡∏ç‡∏´‡∏≤: ${problemTypes[problemKey].name}\n\n‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà 1: ${problemTypes[problemKey].solutions[0]}\n\n‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡∏ó‡∏≥‡∏ï‡∏≤‡∏°‡πÅ‡∏•‡πâ‡∏ß‡∏ï‡∏≠‡∏ö‡∏ß‡πà‡∏≤ "‡πÅ‡∏Å‡πâ‡πÑ‡∏î‡πâ" ‡∏´‡∏£‡∏∑‡∏≠ "‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ"`
  };
}

// Handle troubleshooting
function handleTroubleshooting(userId, message, session) {
  const response = message.toLowerCase().trim();
  
  if (response.includes('‡πÅ‡∏Å‡πâ‡πÑ‡∏î‡πâ') || response === 'ok' || response === 'yes') {
    session.step = 'start';
    return {
      type: 'text',
      text: 'üéâ ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏î‡πâ‡∏ß‡∏¢! ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡πâ‡∏ß\n\n‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£ ‡∏´‡∏≤‡∏Å‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏≠‡∏∑‡πà‡∏ô ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÑ‡∏î‡πâ‡∏ï‡∏•‡∏≠‡∏î‡πÄ‡∏ß‡∏•‡∏≤\n\n‡∏û‡∏¥‡∏°‡∏û‡πå "‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á'
    };
  }
  
  if (response.includes('‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ') || response === 'no') {
    session.data.currentStep++;
    
    if (session.data.currentStep < session.data.solutions.length) {
      return {
        type: 'text',
        text: `‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ó‡∏µ‡πà ${session.data.currentStep + 1}: ${session.data.solutions[session.data.currentStep]}\n\n‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡∏ó‡∏≥‡∏ï‡∏≤‡∏°‡πÅ‡∏•‡πâ‡∏ß‡∏ï‡∏≠‡∏ö‡∏ß‡πà‡∏≤ "‡πÅ‡∏Å‡πâ‡πÑ‡∏î‡πâ" ‡∏´‡∏£‡∏∑‡∏≠ "‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ"`
      };
    } else {
      session.step = 'get_machine_number';
      return {
        type: 'text',
        text: 'üòî ‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢ ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏Å‡πâ‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡πÑ‡∏î‡πâ‡∏î‡πâ‡∏ß‡∏¢‡∏ß‡∏¥‡∏ò‡∏µ‡∏õ‡∏Å‡∏ï‡∏¥\n\nüìù ‡∏Ç‡∏≠‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏Ñ‡∏∑‡∏ô + ‡∏ï‡∏∏‡πä‡∏Å‡∏ï‡∏≤‡∏ü‡∏£‡∏µ 1 ‡∏ï‡∏±‡∏ß\n\nüéØ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏ï‡∏π‡πâ (‡πÄ‡∏ä‡πà‡∏ô A001, B052)'
      };
    }
  }
  
  return {
    type: 'text',
    text: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏≠‡∏ö "‡πÅ‡∏Å‡πâ‡πÑ‡∏î‡πâ" ‡∏´‡∏£‡∏∑‡∏≠ "‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ" ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô'
  };
}

// Handle machine number
function handleMachineNumber(userId, message, session) {
  const machineNumber = message.trim().toUpperCase();
  
  if (machineNumber.length < 3) {
    return {
      type: 'text',
      text: '‚ùå ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏ï‡∏π‡πâ‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á\n\n‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÉ‡∏™‡πà‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏ï‡∏π‡πâ‡∏ó‡∏µ‡πà‡∏ï‡∏¥‡∏î‡∏≠‡∏¢‡∏π‡πà‡∏ö‡∏ô‡∏ï‡∏π‡πâ (‡πÄ‡∏ä‡πà‡∏ô A001, B052, C123)'
    };
  }
  
  session.data.machineNumber = machineNumber;
  session.step = 'get_location';
  
  return {
    type: 'text',
    text: `‚úÖ ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏ï‡∏π‡πâ: ${machineNumber}\n\nüìç ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡∏ï‡∏π‡πâ:\n\nüè™ ‡∏´‡∏≤‡∏Å‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÄ‡∏ã‡πÄ‡∏ß‡πà‡∏ô: ‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏Ç‡∏≤‡πÅ‡∏•‡∏∞‡∏£‡∏´‡∏±‡∏™‡∏™‡∏≤‡∏Ç‡∏≤\nüè¢ ‡∏´‡∏≤‡∏Å‡∏≠‡∏¢‡∏π‡πà‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ã‡πÄ‡∏ß‡πà‡∏ô: ‡∏£‡∏∞‡∏ö‡∏∏‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏£‡πâ‡∏≤‡∏ô\nüè¨ ‡∏´‡∏≤‡∏Å‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà‡∏≠‡∏∑‡πà‡∏ô: ‡∏£‡∏∞‡∏ö‡∏∏‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô`
  };
}

// Handle location
function handleLocation(userId, message, session) {
  const location = message.trim();
  
  if (location.length < 10) {
    return {
      type: 'text',
      text: '‚ùå ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô\n\n‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ó‡∏µ‡πà‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô ‡πÄ‡∏ä‡πà‡∏ô:\n‚Ä¢ ‡πÄ‡∏ã‡πÄ‡∏ß‡πà‡∏ô ‡∏™‡∏≤‡∏Ç‡∏≤‡∏™‡∏¢‡∏≤‡∏° ‡∏£‡∏´‡∏±‡∏™ 00123\n‚Ä¢ ‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ã‡πÄ‡∏ß‡πà‡∏ô ‡∏ã‡∏≠‡∏¢‡∏•‡∏≤‡∏î‡∏û‡∏£‡πâ‡∏≤‡∏ß 15\n‚Ä¢ ‡∏´‡πâ‡∏≤‡∏á‡∏™‡∏£‡∏£‡∏û‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ABC ‡∏ä‡∏±‡πâ‡∏ô 3'
    };
  }
  
  session.data.location = location;
  session.step = 'get_customer_info';
  
  return {
    type: 'text',
    text: `‚úÖ ‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà: ${location}\n\nüë§ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß:\n\n‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö: ‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•, ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£, ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏™‡∏µ‡∏¢\n\n‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á:\n‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÉ‡∏à‡∏î‡∏µ, 081-234-5678, 40 ‡∏ö‡∏≤‡∏ó`
  };
}

// Handle customer info
function handleCustomerInfo(userId, message, session) {
  const info = message.trim();
  const parts = info.split(',');
  
  if (parts.length < 3) {
    return {
      type: 'text',
      text: '‚ùå ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô\n\n‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏:\n‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•, ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£, ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏™‡∏µ‡∏¢\n\n‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á:\n‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÉ‡∏à‡∏î‡∏µ, 081-234-5678, 40 ‡∏ö‡∏≤‡∏ó'
    };
  }
  
  session.data.customerName = parts[0].trim();
  session.data.customerPhone = parts[1].trim();
  session.data.lostAmount = parts[2].trim();
  session.step = 'get_evidence';
  
  return {
    type: 'text',
    text: `‚úÖ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤:\n‚Ä¢ ‡∏ä‡∏∑‡πà‡∏≠: ${session.data.customerName}\n‚Ä¢ ‡πÄ‡∏ö‡∏≠‡∏£‡πå: ${session.data.customerPhone}\n‚Ä¢ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô: ${session.data.lostAmount}\n\nüì∏ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡πà‡∏á‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô:\n\n1. ‡∏£‡∏π‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏ï‡∏π‡πâ‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£‡∏´‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô\n2. ‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡∏Å‡∏≤‡∏£‡∏´‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)\n3. ‡∏£‡∏π‡∏õ‡∏ï‡∏π‡πâ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏õ‡∏±‡∏ç‡∏´‡∏≤\n\n‡∏´‡∏≤‡∏Å‡∏•‡∏∑‡∏°‡∏ñ‡πà‡∏≤‡∏¢ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡∏´‡∏¢‡∏≠‡∏î‡πÉ‡∏´‡∏°‡πà‡πÅ‡∏•‡∏∞‡∏ñ‡πà‡∏≤‡∏¢‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô\n\n‡∏û‡∏¥‡∏°‡∏û‡πå "‡∏™‡πà‡∏á‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢" ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏™‡πà‡∏á‡∏Ñ‡∏£‡∏ö‡πÅ‡∏•‡πâ‡∏ß`
  };
}

// Handle evidence
function handleEvidence(userId, message, session) {
  if (message.includes('‡∏™‡πà‡∏á‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢') || message.includes('‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢')) {
    session.step = 'get_account';
    return {
      type: 'text',
      text: '‚úÖ ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢\n\nüèß ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢: ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡πà‡∏á‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ç‡∏ä‡∏µ\n\n‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö: ‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£, ‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ç‡∏ä‡∏µ, ‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ç‡∏ä‡∏µ\n\n‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á:\n‡∏Å‡∏™‡∏¥‡∏Å‡∏£‡πÑ‡∏ó‡∏¢, 123-4-56789-0, ‡∏ô‡∏≤‡∏¢‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÉ‡∏à‡∏î‡∏µ'
    };
  }
  
  return {
    type: 'text',
    text: 'üì∏ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏™‡πà‡∏á‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏£‡∏∞‡∏ö‡∏∏:\n\n1. ‡∏£‡∏π‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏ï‡∏π‡πâ‡∏ó‡∏µ‡πà‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£‡∏´‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô\n2. ‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠‡∏Å‡∏≤‡∏£‡∏´‡∏¢‡∏≠‡∏î‡πÄ‡∏á‡∏¥‡∏ô (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)\n3. ‡∏£‡∏π‡∏õ‡∏ï‡∏π‡πâ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏õ‡∏±‡∏ç‡∏´‡∏≤\n\n‡∏û‡∏¥‡∏°‡∏û‡πå "‡∏™‡πà‡∏á‡∏´‡∏•‡∏±‡∏Å‡∏ê‡∏≤‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢" ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏™‡πà‡∏á‡∏Ñ‡∏£‡∏ö‡πÅ‡∏•‡πâ‡∏ß'
  };
}

// Handle account
async function handleAccount(userId, message, session) {
  const accountInfo = message.trim();
  const parts = accountInfo.split(',');
  
  if (parts.length < 3) {
    return {
      type: 'text',
      text: '‚ùå ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡πÑ‡∏°‡πà‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô\n\n‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏:\n‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£, ‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ç‡∏ä‡∏µ, ‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ç‡∏ä‡∏µ\n\n‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á:\n‡∏Å‡∏™‡∏¥‡∏Å‡∏£‡πÑ‡∏ó‡∏¢, 123-4-56789-0, ‡∏ô‡∏≤‡∏¢‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÉ‡∏à‡∏î‡∏µ'
    };
  }
  
  session.data.bankName = parts[0].trim();
  session.data.accountNumber = parts[1].trim();
  session.data.accountName = parts[2].trim();
  session.data.timestamp = new Date().toISOString();
  
  // Log customer data to console
  console.log('=== ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà ===');
  console.log('‡πÄ‡∏ß‡∏•‡∏≤:', session.data.timestamp);
  console.log('‡∏õ‡∏±‡∏ç‡∏´‡∏≤:', session.data.problemName);
  console.log('‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏ï‡∏π‡πâ:', session.data.machineNumber);
  console.log('‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà:', session.data.location);
  console.log('‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤:', session.data.customerName);
  console.log('‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£:', session.data.customerPhone);
  console.log('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô:', session.data.lostAmount);
  console.log('‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£:', session.data.bankName);
  console.log('‡πÄ‡∏•‡∏Ç‡∏ö‡∏±‡∏ç‡∏ä‡∏µ:', session.data.accountNumber);
  console.log('‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ç‡∏ä‡∏µ:', session.data.accountName);
  console.log('========================');
  
  // Save to Google Sheets
  const saved = await saveToGoogleSheets(session.data);
  
  // Reset session
  session.step = 'start';
  session.data = {};
  
  if (saved) {
    return {
      type: 'text',
      text: 'üéâ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô‡πÅ‡∏•‡πâ‡∏ß!\n\n‚úÖ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢\nüí∞ ‡∏à‡∏∞‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏Ñ‡∏∑‡∏ô + ‡∏ï‡∏∏‡πä‡∏Å‡∏ï‡∏≤‡∏ü‡∏£‡∏µ 1 ‡∏ï‡∏±‡∏ß\n‚è∞ ‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á\n\n‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£! üôè\n\n‡∏û‡∏¥‡∏°‡∏û‡πå "‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á'
    };
  } else {
    return {
      type: 'text',
      text: '‚ö†Ô∏è ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ‡∏ñ‡∏π‡∏Å‡∏£‡∏±‡∏ö‡πÑ‡∏ß‡πâ‡πÅ‡∏•‡πâ‡∏ß ‡πÅ‡∏ï‡πà‡∏Å‡∏≤‡∏£‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö‡∏°‡∏µ‡∏õ‡∏±‡∏ç‡∏´‡∏≤\n\n‚úÖ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ‡∏ñ‡∏π‡∏Å‡∏™‡πà‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡πÅ‡∏•‡πâ‡∏ß\nüí∞ ‡∏à‡∏∞‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏Ñ‡∏∑‡∏ô + ‡∏ï‡∏∏‡πä‡∏Å‡∏ï‡∏≤‡∏ü‡∏£‡∏µ 1 ‡∏ï‡∏±‡∏ß\n‚è∞ ‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á\n\n‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£! üôè\n\n‡∏û‡∏¥‡∏°‡∏û‡πå "‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÉ‡∏´‡∏°‡πà" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á'
    };
  }
}

// Start server
const port = process.env.PORT || 3000;
app.listen(port, () => {
  console.log(`ü§ñ Claw Machine Support Bot running on port ${port}`);
});

module.exports = app;
